#!/bin/bash

BASE_IMAGE=ubuntu-bionic
if [ $# -ge 1 ]; then
    case "$1" in
    ubuntu-xenial);;
    ubuntu-bionic);;
    centos6);;
    centos7);;
    *)
        echo "Invalid base image name: $1" 1>&2
        exit 1
        ;;
    esac
    BASE_IMAGE="$1"
fi
SPACK_OPTS=""
BUILD_CURL="false"
case "$BASE_IMAGE" in
ubuntu-xenial)
    # use the installed compiler
    COMPILER="gcc@5.4.0"
    ;;
ubuntu-bionic)
    # use the installed compiler
    COMPILER="gcc@7.5.0"
    ;;
centos6)
    # Workaround " ==> Spack will not check SSL certificates" related errors
    SPACK_OPTS="-k"
    # see https://github.com/spack/spack/issues/6708
    BUILD_CURL="true"
    # installed compiler is too old, use the minimal one
    COMPILER="gcc@5.4.0"
    ;;
centos7)
    # Workaround " ==> Spack will not check SSL certificates" related errors
#     SPACK_OPTS="-k"
    # see https://github.com/spack/spack/issues/6708
#     BUILD_CURL="true"
    # installed compiler is too old, use the minimal one
    COMPILER="gcc@5.4.0"
    ;;
*)
    echo "Invalid base image name: $BASE_IMAGE" 1>&2
    exit 1
    ;;
esac
if [ $# -ge 2 ]; then
    COMPILER="$2"
fi

RUNCMD="$(mktemp --tmpdir -d spack_test_in_docker-XXXXXXXXXX)"
function finish {
  rm -rf "${RUNCMD}"
}
trap finish EXIT INT TERM

cat <<RUN_SH_EOF > "${RUNCMD}/docker-run.sh"
#/bin/bash
set -ex
git clone https://github.com/leobago/fti-spack /opt/spack-fti
spack ${SPACK_OPTS} repo add /opt/spack-fti
git clone https://gitlab.version.fz-juelich.de/SIONlib/spack-repository.git /opt/spack-SIONlib
spack ${SPACK_OPTS} repo add /opt/spack-SIONlib
spack ${SPACK_OPTS} repo add /opt/spack-pdi
mkdir /opt/spack-environment
cd /opt/spack-environment
cat <<SPACK_YAML_EOF > spack.yaml
spack:
  packages:
    all:
      compiler: [${COMPILER}]
      target: [ x86_64 ]
  specs:
    - pdiplugin-decl-hdf5
    - pdiplugin-decl-netcdf
    - pdiplugin-flowvr
    - pdiplugin-mpi
    - pdiplugin-pycall
    - pdiplugin-serialize
    - pdiplugin-set-value
    - pdiplugin-trace
    - pdiplugin-user-code
    - pdiplugin-decl-sion
    - pdiplugin-fti
    - mesa~llvm
  concretization: together
  config:
    install_tree: /opt/software
    view: /opt/view
SPACK_YAML_EOF
touch /opt/spack-environment/env.sh
if [ '${BUILD_CURL}' = true ]
then
    spack ${SPACK_OPTS} install --show-log-on-error --fail-fast curl
    echo 'export PATH="'\$(spack location --install-dir curl)/bin':\$PATH"' >> /opt/spack-environment/env.sh
fi
if ! spack compilers | grep "${COMPILER}" &>/dev/null
then
    . /opt/spack-environment/env.sh
    spack ${SPACK_OPTS} install --show-log-on-error --fail-fast "${COMPILER}"
    spack ${SPACK_OPTS} load "${COMPILER}"
    spack ${SPACK_OPTS} compilers
    spack ${SPACK_OPTS} compiler find
    spack ${SPACK_OPTS} compilers
fi
spack ${SPACK_OPTS} env activate .
. /opt/spack-environment/env.sh
spack ${SPACK_OPTS} install --show-log-on-error --fail-fast
RUN_SH_EOF

docker run -v "${PWD}:/opt/spack-pdi" -v "${RUNCMD}:/opt/runcmd" "spack/${BASE_IMAGE}:latest" docker-shell bash /opt/runcmd/docker-run.sh
