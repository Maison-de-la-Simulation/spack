#!/bin/bash

BASE_IMAGE="${BASE_IMAGE:-ubuntu-bionic}"
# compiler if not specified otherwise
COMPILER="gcc@5.4.0"
# parallelism
PARALLELISM="${PARALLELISM:-1}"
# spack install arguments
SPACK_INSTALL_ARGS="${SPACK_INSTALL_ARGS:-"--show-log-on-error --fail-fast"}"

if [ $# -ge 1 ]; then
    case "$1" in
    ubuntu-xenial|ubuntu-bionic|centos7)
        BASE_IMAGE="$1"
        ;;
    centos6)
        echo "$1 is not working" 1>&2
        exit 2
        ;;
    *)
        echo "Invalid base image name: $1" 1>&2
        exit 1
        ;;
    esac
fi

case "$BASE_IMAGE" in
ubuntu-xenial)
    ;;
ubuntu-bionic)
    # use the installed compiler
    COMPILER="gcc@7.5.0"
    ;;
centos7)
    ;;
esac

if [ $# -ge 2 ]; then
    COMPILER="$2"
fi

RUNCMD="$(mktemp --tmpdir -d spack_test_in_docker-XXXXXXXXXX)"
function finish {
  rm -rf "${RUNCMD}"
}
trap finish EXIT INT TERM

cat <<RUN_SH_EOF > "${RUNCMD}/docker-run.sh"
#/bin/bash
set -e
git clone https://github.com/leobago/fti-spack /opt/spack-fti
spack repo add /opt/spack-fti
git clone https://gitlab.version.fz-juelich.de/SIONlib/spack-repository.git /opt/spack-SIONlib
spack repo add /opt/spack-SIONlib
spack repo add /opt/spack-pdi
mkdir /opt/spack-environment
cd /opt/spack-environment
cp /opt/spack-pdi/tests/spack.yaml .
if ! spack compilers | grep "${COMPILER}" &>/dev/null
then
    for N in {2..${PARALLELISM}}
    do spack install ${SPACK_INSTALL_ARGS} "${COMPILER}" &
    done
    spack install ${SPACK_INSTALL_ARGS} "${COMPILER}" || \
    tail -n +1 -- /tmp/root/spack-stage/spack-stage-*/spack-*-out.txt
    spack load "${COMPILER}"
    spack compilers
    spack compiler find
    spack compilers
fi
spack env activate .
spack config add config:install_tree:root:/opt/software
spack config add config:view:/opt/view
spack config add 'packages:all:compiler:[${COMPILER}]'
spack config add 'packages:all:target:[x86_64]'
spack concretize
for N in {2..${PARALLELISM}}
do spack install ${SPACK_INSTALL_ARGS} &
done
spack install ${SPACK_INSTALL_ARGS} || \
tail -n +1 -- /tmp/root/spack-stage/spack-stage-*/spack-*-out.txt
RUN_SH_EOF

docker run --rm -v "${PWD}:/opt/spack-pdi" -v "${RUNCMD}:/opt/runcmd" "spack/${BASE_IMAGE}:latest" docker-shell bash "/opt/runcmd/docker-run.sh"
